@using Microsoft.AspNetCore.Identity
@using Sklep_Internetowy.Models
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var currentUser = await UserManager.GetUserAsync(User);

        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                @currentUser.FirstName
            </a>
        </li>
        @if (currentUser?.Role == "admin" || currentUser?.Role == "moderator")
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="OrderStatistics" asp-action="Index">Statystyki</a>
            </li>
        }
        @if (currentUser?.Role == "admin" ||currentUser?.Role == "moderator")
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Products" asp-action="Index">Zarządzaj produktami</a>
            </li>
        }
        @if (currentUser?.Role == "admin")
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Admin" asp-action="ManageUsers">Zarządzaj użytkownikami</a>
            </li>
        }

        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Wyloguj</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Rejestracja</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
